---
- name: "Set up an Urbit planet"
  hosts: "{{ target if target is defined else 'planet_servers' }}"
  become: true

  tasks:
# Add Swap to the node
    - name: Create swap space
      command: dd if=/dev/zero of=/extraswap bs=1M count=2048
      when: ansible_swaptotal_mb < 1000

    - name: Make swap
      command: mkswap /extraswap
      when: ansible_swaptotal_mb < 1000

    - name: Add to fstab
      action: lineinfile dest=/etc/fstab regexp="extraswap" line="/extraswap none swap sw 0 0" state=present

    - name: Turn swap on
      command: swapon -a
# Install and start Urbit
    - name: Set swapiness
      shell: echo 0 | sudo tee /proc/sys/vm/swappiness

    - name: Test if the planet is already running. Used to prevent double runs.
      shell: ps -aux | grep {{ planet_name }} | wc | awk '$1 < 2 {err = 1} END {exit err}'
      register: planet_running

    - name: Test if the planet has run by checking for its data directory. Used to prevent accidental restart of stopped planet.
      stat:
        path: "{{ planet_name }}"
      register: planet_has_run

    - name: Download and unarchive latest Urbit binary
      unarchive:
        src: https://urbit.org/install/linux64/latest
        dest: /usr/local/bin
        remote_src: yes
        list_files: yes
      register: urbit_dir

    - name: Start the planet if it has never run and is not currently running
      shell: /usr/local/bin/{{ urbit_dir.files[0] }} -d -w {{ planet_name }} -G {{ planet_key }} > {{ planet_name }}.out
      tags: urbit
      when: not (planet_has_run.stat.exists) and planet_running != 1
